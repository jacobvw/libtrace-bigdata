# Hostname
hostname: hostname

# Network interface to capture data on. Any URI supported by libtrace works
# here. 
interface: eth0

# Number of packet processing threads
threads: 1

# Method used to determin a packets direction. i.e. inbound vs outbound.
# available options
#	DIR_METHOD_TRACE   - Use libtrace trace_get_direction API method.
#	DIR_METHOD_PORT    - Guess the direction based on server/client ports.
#	DIR_METHOD_NETWORK - Use network prefix/s from local_networks.  
direction_method: DIR_METHOD_NETWORK

# local networks. IPv4 and IPv6 networks are supported here.
local_networks:
  - 192.168.1.0/24

# Enable libtrace HASHER_BIDIRECTIONAL hasher.
# Only enable if you are using more than 1 packet processing thread and you
# do NOT have another mechanism for assigning packets form the same flow to
# the same Libtrace thread.
enable_bidirectional_hasher: 0

# Debug level 0-3
debug: 0

# capture modules
foreach:

  # dns module
  dns:
    enabled: 0
    # timeout to flush old requests that have not received a response (seconds)
    timeout_request: 20
    # how often to check for timed out requests with no response (seconds)
    timeout_check: 20

  # protocol statistics module
  protocol_statistics:
    enabled: 0
    # how often to output results (seconds)
    output_interval: 60
    metrics:
      # export in/out bytes per protocol
      - byte_count
      # export in/out packet count per protocol
      - packet_count
      # export the number of flows per protocol
      - flow_count
      # export the number unique local src/dst IPs and unique
      # external src/dst IPs
      - ip_count
      # export in/out bitrate per protocol
      - bitrate

  # flow statistics
  flow_statistics:
    enabled: 0
    # how often to output results (seconds)
    output_interval: 60
    # protocols to output flow information for. Refer to each Libprotoident
    # (https://github.com/wanduow/libprotoident) plugins for correct names.
    protocols:
      - HTTP
      - HTTPS
    # protocol categories to output flow information for. Refer to Libprotoident
    # for category names. NOT YET IMPLEMENTED
    protocol_categories:
      - Remote_Access

  # statistics module
  statistics:
    enabled: 0
    output_interval: 60
    metrics:
      - byte_count
      - packet_count
      - ip4_packet_count
      - ip6_packet_count
      - tcp_packet_count
      - udp_packet_count

# filtering modules
filter:
  # The maxmind plugin will insert latitude and longitude coordinates for each
  # IP address inserted into a result set.
  maxmind:
    enabled: 0
    # Location of the maxmind database to use and can be obtained from
    # https://dev.maxmind.com/geoip/geoip2/geolite2/
    database: /etc/bigdata/GeoLite2-City.mmdb
    metrics:
      - coordinates
      - geohash
      - city
      - country

# output modules
where:

  influxdb:
    enabled: 0
    # Enable certificate verification
    ssl_verify_peer: 1
    host: http://127.0.0.1
    port: 8086
    database: dbname
    username: dbusername
    password: dbpassword
    # Enable to send results to influxdb in batches
    batch_results: 1
    # If batching results, how many to send at a time
    batch_count: 200

  kafka:
    enabled: 0
    brokers: 127.0.0.1:9092
    topic: topicname

  elasticsearch:
    enabled: 0
    host: http://192.168.20.40
    port: 9200
    ssl_verify_peer: 1
    # Does elasticsearch require user/pass authentication (Normally when using X-Pack)
    require_user_auth: 0
    username: elasticuser
    password: elasticpassword
    # Enable to send results to elasticsearch in batches
    batch_results: 1
    # If batching results, how many to send at a time
    batch_count: 200
    
